--- a/makefile	2012-08-30 21:07:42.743138853 +0200
+++ b/makefile	2012-08-30 21:11:30.361149703 +0200
@@ -456,9 +456,6 @@
 CPPONLYFLAGS += -x c++ -std=gnu++98
 COBJFLAGS += -x objective-c++
 
-# this speeds it up a bit by piping between the preprocessor/compiler/assembler
-CCOMFLAGS += -pipe
-
 # add -g if we need symbols, and ensure we have frame pointers
 ifdef SYMBOLS
 CCOMFLAGS += -g$(SYMLEVEL) -fno-omit-frame-pointer
@@ -474,19 +471,6 @@
 CCOMFLAGS += -pg
 endif
 
-# add the optimization flag
-CCOMFLAGS += -O$(OPTIMIZE)
-
-# add the error warning flag
-ifndef NOWERROR
-CCOMFLAGS += -Werror
-endif
-
-# if we are optimizing, include optimization options
-ifneq ($(OPTIMIZE),0)
-CCOMFLAGS += -fno-strict-aliasing $(ARCHOPTS)
-endif
-
 # add a basic set of warnings
 CCOMFLAGS += \
 	-Wall \
@@ -550,14 +534,6 @@
 
 # LDFLAGS are used generally; LDFLAGSEMULATOR are additional
 # flags only used when linking the core emulator
-LDFLAGS =
-ifneq ($(TARGETOS),macosx)
-ifneq ($(TARGETOS),os2)
-ifneq ($(TARGETOS),solaris)
-LDFLAGS = -Wl,--warn-common
-endif
-endif
-endif
 LDFLAGSEMULATOR =
 
 # add profiling information for the linker
@@ -565,13 +541,6 @@
 LDFLAGS += -pg
 endif
 
-# strip symbols and other metadata in non-symbols and non profiling builds
-ifndef SYMBOLS
-ifneq ($(TARGETOS),macosx)
-LDFLAGS += -s
-endif
-endif
-
 # output a map file (emulator only)
 ifdef MAP
 LDFLAGSEMULATOR += -Wl,-Map,$(FULLNAME).map
