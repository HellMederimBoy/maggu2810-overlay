--- app-portage/checkuseflags/files/checkuseflags.sh	2008-04-23 13:40:25.000000000 +0200
+++ /usr/bin/checkuseflags	2008-08-01 16:36:11.000000000 +0200
@@ -2,9 +2,40 @@
 
 set -e
 
+
+function parse_prof_rec() {
+	echo "Reading profile in `pwd` ..."
+	if [ -e "make.defaults" ]; then
+		echo "  sourcing make.defaults"
+		source "make.defaults"
+		PARSEDUSE="$PARSEDUSE $USE"
+	fi
+	if [ -e "parent" ]; then
+		local parents=( `cat parent` )
+		local i
+		for ((i=0; $i < ${#parents[@]}; i++)); do
+			local wd=`pwd`
+			cd ${parents[$i]}
+			parse_prof_rec
+			cd $wd
+		done
+	fi
+}
+
+function parse_prof() {
+	cd /etc
+	cd `readlink make.profile`
+	PARSEDUSE=""
+	parse_prof_rec
+	USE=`echo $PARSEDUSE | sed "s: :\n:g" | sort | uniq`
+	USE=`echo $USE`
+	echo
+	echo "Found default USE-flags: $USE"
+	echo
+}
+
 function check_make_conf() {
-	USE=""
-	source /etc/make.profile/make.defaults
+	parse_prof
 	DEFUSE=" $USE "
 
 	USE=""
@@ -44,7 +75,7 @@
 	echo "Resulting USE list for make.conf is in $tmp1:"
 	res1="`echo $res1`"
 	USE="`echo $USE`"
-	echo -e "${res1// /\n}" | sort | uniq > $tmp2
+	echo -e "${res1// /\n}" > $tmp2
 	echo -e "${USE// /\n}" | diff -u -s - $tmp2 | colordiff
 	res_sort="`cat $tmp2`"
 	res_sort="`echo $res_sort`"
@@ -57,14 +88,13 @@
 	source /etc/make.conf
 	GLOBUSE=" $USE "
 
-	USE=""
-	source /etc/make.profile/make.defaults
+	parse_prof
 	DEFUSE=" $USE "
 
-	cat /etc/portage/package.use | while true; do
+	cat /etc/portage/package.use/user | while true; do
 		if ! read -r package flags; then
 			tmp2=`mktemp`
-			echo -e "$res2" | sort | uniq > $tmp2
+			echo -e "$res2" > $tmp2
 			echo "Resulting portage.use file is in $tmp2:"
 			diff -u -s /etc/portage/package.use $tmp2 | colordiff
 			echo
@@ -80,9 +110,15 @@
 			echo "emerge -upvDN world should not list anything new compared to before making the above changes."
 			break
 		fi
+		if [ -z "$package" -o "${package:0:1}" == "#" ]; then
+			# simply copy this line
+			[ "$res2" ] && res2="$res2\n"
+			[ "$flags" ] && res2="$res2$package $flags" || res2="$res2$package"
+			continue
+		fi
 		pack=$package
 		if [ $pack != ${pack#=} -o $pack != ${pack#<=} -o $pack != ${pack#>=} ]; then
-			#TODO we remove all version information so the found package may not be the correct one
+			#TODO we remove all version information so the found package may not be the correct one if it uses slots
 			pack=${pack#=}
 			pack=${pack#<=}
 			pack=${pack#>=}
@@ -99,30 +135,39 @@
 			fi
 			availflags1=" `FORMAT='<availableversionslong>' eix --exact $pack | sed -e "s/[^{]*//" -e "s/.*{\(.*\)}.*/\1/"` "
 			if [ $installed -gt 0 ]; then
-				availflags2=" `FORMAT='<installedversions:::::::@>' eix --exact $pack | grep @ | cut -d @ -f 2` "
+				availflags2=" `FORMAT='<installedversions::::::::::@>' eix --exact $pack | grep @ | cut -d @ -f 2` "
 				[ $2 -eq 1 ] && availflags1=""
 			else
 				availflags2=""
 			fi
-			availflags1="${availflags1// -/ }"
-			availflags2="${availflags2// -/ }"
+			availflags1=" ${availflags1// -/ }"
+			availflags2=" ${availflags2// -/ }"
 			notfound=""
 			validflags=""
 			for flag in $flags; do
 				f=${flag#-}
-				if [ "$availflags1" == "${availflags1/ $f /}" -a "$availflags2" == "${availflags2/ $f /}" ]; then
+				if [ "$availflags1" == "${availflags1/ $f /}" -a "$availflags2" == "${availflags2/ $f /}" -a \
+					"$availflags1" == "${availflags1/ +$f /}" -a "$availflags2" == "${availflags2/ +$f /}" -a \
+					"$availflags1" == "${availflags1/ -$f /}" -a "$availflags2" == "${availflags2/ -$f /}" ]; then
 					notfound="$notfound $flag"
 				else
 					if [ "$GLOBUSE" != "${GLOBUSE/ $flag /}" ]; then
 						echo "Flag already contained in make.conf: $flag"
 						notfound="$notfound $flag"
 					elif [ "$DEFUSE" != "${DEFUSE/ $flag /}" -a "$GLOBUSE" == "${GLOBUSE/ -$flag /}" ]; then
-						echo "Flag already contained in default flags and not in make.conf: $flag"
+						echo "Flag already contained in default flags and not (negated) in make.conf: $flag"
 						notfound="$notfound $flag"
 					else
 						validflags="$validflags $flag"
 					fi
 				fi
+				if [ $f == $flag ]; then
+					usedinst=`eix --installed --use $f --only-names | wc -l`
+					usedall=`eix --use $f --only-names | wc -l`
+					if [ $usedall -gt 2 ]; then
+						echo "Flag used in more than 2 available packages: $f in $usedall packages ($usedinst installed)"
+					fi
+				fi
 			done
 			if [ "$notfound" ]; then
 				printf "%-40s has invalid flag(s) in package.use: %s\n" $package "$notfound"
@@ -144,7 +189,7 @@
 	echo "make-local:   0 or 1 => make USE flags in make.conf used by only 2 available or no"
 	echo "                        installed packages local by putting them into portage.use."
 	echo "inst-only:    0 or 1 => if a package is installed, remove not only invalid USE flags"
-	echo "                        from portage.use but also all flags not availabe for the"
+	echo "                        from portage.use but also all flags not available for the"
 	echo "                        currently installed version."
 	echo "rem-not-inst: 0 or 1 => remove all packages from portage.use which are not installed."
 	echo
